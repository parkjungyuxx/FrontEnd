
반복문 (Loop Statement)

주어진 조건식의 평가 결과가 참인 경우 코드 블럭을 살행하는 것
--- 조건식인 참인 경우 코드 덩어리 실행

1. for

for(초기화식; 조건식; 증감식) {
    조건식이 참인 경우 실행될 문장
}

ex) for(let i = 0; i < 5; i++) {
    console.log(i);
}

i++ -> 코드블럭을 실행하고 i의 값에 1을 더한다

for(;;) {
    // 무한 루프
}

2. while

let count = 0;

while(count < 3) {
    console.log(count);
    count++;
}

while(true){
    //무한 반복
    if (isActive) {
        .... 실행
        break;
    }
}

3. do...while
 최소 한번은 실행하고 조건식 평가하는 반복문

 const count = 1;

 do {
    console.log("a");
 } while (count < 3)

--------------------------------

함수 

함수 또한 변수와 똑같아요

자동차 기능 {
    시동켜기
    에어컨을 킬수도 있고
    주행
    선루프 열 수도 있고
    ...
}

함수에는 선언문(컴퓨터에게 기억), 실행문(가져다가 쓸곳)
나는 이러한 기능을 이러한 이름으로 기억시킬거야
** 선언하는 것과 실행하는 것이 별개 **

두 수를 더하는 기능



function addNumber() {
    return num1 + num2;
}

--------------------------------

함수를 사용하는 경우의 수

특정 동작만 하면 되는 함수
function logAddNumber(num1, num2) {
    console.log(num1 + num2)
}

두 수를 더해서 이 결과 값에 함수 외부에서 특정 수를 다시 더하고 싶어요
function addNumber(num1, num2) {
    num1 + num2
}

addNumber(3,5) // 8
8이라고 나온 결과를 다양하게 활용

숫자 -> 문자열
재연산
서버에 데이터를 전송

function addNumber(num1,num2) {
    return num1 + num2;
}

addNumber(3,5) === 8 (false) - return (x) - undefined
addNumber(3,5) === 8 (true) - return (o) 
8이라고 나온 결과를 다양하게 활용

function 시동켜기() {
    if(시동켜기에 성공) return true
    return false
}

funciton 투싼() {
    const isEngine = 시동켜기()
    if(isEngine) {
        ... 외부에서 결과 값을 사용할 수 있다
    }
}

함수 선언문과 표현식


-----------------------

객체, 배열(고차함수)



