

전역상태 관리
- 불효
- 프롭스 드릴링
>> 고려해야 한다


Context
- player
- modal

Reducer
- player

Redux
- player

Redux
- user

--------------------

전역 상태 관리 도구 

Context (o), useSyncExternalStore (상태 추적 가능 훅)
- Reac에서 빌트인으로 지원하는 기능, 훅 함수

Redux (o)
- 과거에 유명했던 라이브러리
- 당시에 구현했던 앱들은 대부분 리덕스를 사용 중
- 유지 보수를 위하여 습득할 필요가 있음

Mobx 
- Redux 단점 보완해서 나온 라이브러리
- 정말 잠깐 유명했다가 인기가 줄어든 라이브러리

XState
- 개발자들에게 굉장히 큰 관심
- 관심에서 끝난 라이브러리

Recoil (o)
- meta의 react team이 개발
- hook 함수 기반이라서 사용법이 비슷
- const [state, setState] = useRecoil(stateAtom)
- 현재로서는 가장 많이 사용을 하는 도구

Jotai (경험)
Zustand (경험)
- 경량화
- 쉬운 사용법
- 5년 이내 신설 스타트업이라면 가장 많이 사용하는 도구
- 사이드 프로젝트 진행한다면 가장 많이 사용하는 도구
- 학원에서 가장 많이 가르치는 도구 (Redux, Recoil, Jotai, Zustand)


--------------------

전역 상태 관리 도구는 앞으로 계속 꾸준히 바뀔거에요
>> 진입 장벽이 높다고 생각하지 말아주세요
>> 다만, 익숙하지 않을 가능성이 높아요
>> 함수를 사용하는데 내가 만든 함수가 아니깐 역할을 몰라요
>> 이 함수를 분석해보지는 않아도 괜찮습니다. 어떤 기능과 어떤 역할을 하는지 정도는 알고 있으면 좋습니다.
>> 이 사람은 무슨 의도로 함수명을 이렇게 지었을까?

Context
전역상태관리, 값을 공유

1. 저장 공강 생성
2. 공유 범위 지정
3. 값을 저장
4. 공유 범위 안에서 저장된 값을 사용하기 위한 함수 useContext(context)

// 컨텍스트를 생성해줍니다
const a = createContext()



