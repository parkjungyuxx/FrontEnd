
커스텀 훅

훅 함수를 활요앟여 재사용될 수 있는 함수를 모듈화한 것
리액트 특성상 view + logic 이 두개를 분리하는 용도

const [users, setUsers] = useState([]);

const addUser = () => {
    // ...
}

만약에 user state와 addUser를 사용하는 컴포넌트가 1개가 아닌 복수라고 한다면
나는 매번 상태를 선언하고 함수를 선언해야하는가

const {users, addUser} = useUser()
                        ----------- 커스텀 훅, 이름은 use만 붙으면 자유롭게 정의

const {state, changePrev} = usePrev();
chagnePrev() // state -> false -> true, true -> false

1. 재사용될
2. 로직을 캡슐화 (숨실 수 있다)

-------------------------------------------------------------------------

전역상태관리
(Global State Management)

1. 여러분들이 필요성을 느끼는가
2. 전역상태가 나온 배경은 무엇일까?
=> 지역 상태 관리에서 생긴 불편함을 해소하기 위해
=> 지역 상태만으로 관리해서 어떤 어려움이 있었는가

3. 어떤 불편함

3-1. 프롭스(props) 드릴링 
props: 상위 컴포넌트에서 하위 컴포넌트로 전달되는 값
drilling: props의 전달이 깊어지는 행위

부모컴포넌트
A (stateA)                  B 
    C 
        D 
            E 
                F

전역상태관리의 장점
1. 추적이 쉬워집니다 -> 남밢하면 오히려 추적이 어려워집니다.
2. 리랜더링 추적화


3-2. 불효 (상태해체)

=> 해당 컴포넌트가 몰라도 되는 값을 공유하기 위해서 알고 있는 경우 -> 전역 상태 관리가 필요
=> 추적 용이, 리랜더링 최적화
=> 남발하면 안됨
=> 지역 상태만으로 해결하는 것이 가장 좋습니다
=> 전역 상태 고민한다
=> 이벤트 버스(event Bus), useImpretiverHandle, eventListner

-------------------------------------------------------------------------

5개월 과정

1주차 context(reducer), redux + reduxThunk + msw
2주차 msw 마무리 + react-query + recoil
3주차 react-query + recoil + storybook
4주차 무한스크롤링 영화 웹 사이트

-------------------------------------------------------------------------

6개월 과정

1주차 dbms 광의
2주차 nodejs 로그인 + 게시글 crud
3주차 typescript
4주차 react + typescript, 촛불시간

-------------------------------------------------------------------------

과제

잘하신 분 2분 코드 (20~30분)
todolist 만들기

todo 목록 보여주기
todo 추가하기 (제목, 내용, 추가시 input 삭제)
todo 수정하기 (제목, 내용모두 수정 가능, 할일 완료 체크 따로 수정 가능)
todo 삭제하기 

페이지네이션, 무한스크롤링은 하지 않습니다.
css-in-js 활용해서 이쁘게 꾸며오삼


